import requests
from bs4 import BeautifulSoup
from ssettings import currencies

class MessageException(Exception):
    def __str__(self):
        return "üò°–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –∑–∞–ø—Ä–æ—Å. –ü–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–æ–ø—ã—Ç–∫—É."

class SameCurrenciesException(Exception):
    def __str__(self):
        return "üò°–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –∑–∞–ø—Ä–æ—Å: –í—ã –≤–≤–µ–ª–∏ –¥–≤–µ –æ–¥–∏–Ω–∞–∫–æ–≤—ã–µ –≤–∞–ª—é—Ç—ã. –ü–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–æ–ø—ã—Ç–∫—É."

class VrongAmountException(Exception):
    def __str__(self):
        return "üò°–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –∑–∞–ø—Ä–æ—Å: –í—ã –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ –≤–≤–µ–ª–∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–µ—Ä–≤–æ–π –≤–∞–ª—é—Ç—ã. –ü–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–æ–ø—ã—Ç–∫—É."

class VrongFirstCurrencyException(Exception):
    def __str__(self):
        return "üò°–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –∑–∞–ø—Ä–æ—Å: –ù–∞–∑–≤–∞–Ω–∏–µ –ø–µ—Ä–≤–æ–π –≤–∞–ª—é—Ç—ã –≤–≤–µ–¥–µ–Ω–æ –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ –ª–∏–±–æ –≤—ã –≤–≤–µ–ª–∏ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—É—é –≤–∞–ª—é—Ç—É. –ù–∞–∑–≤–∞–Ω–∏—è –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –≤–∞–ª—é—Ç /values. –ü–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–æ–ø—ã—Ç–∫—É."

class VrongSecondCurrencyException(Exception):
    def __str__(self):
        return "üò°–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –∑–∞–ø—Ä–æ—Å: –ù–∞–∑–≤–∞–Ω–∏–µ –≤—Ç–æ—Ä–æ–π –≤–∞–ª—é—Ç—ã –≤–≤–µ–¥–µ–Ω–æ –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ –ª–∏–±–æ –≤—ã –≤–≤–µ–ª–∏ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—É—é –≤–∞–ª—é—Ç—É. –ù–∞–∑–≤–∞–Ω–∏—è –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –≤–∞–ª—é—Ç /values. –ü–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–æ–ø—ã—Ç–∫—É."

class Zapros:
    def __init__(self, base, quote, amount, currencies):
        self.base = base
        self.quote = quote
        self.amount =amount
        self.currencies = currencies
    def get_price(self):
        html = requests.get('https://www.banki.ru/products/currency/cb/').content
        soup = BeautifulSoup(html, 'lxml')
        tbody = soup.find('tbody')
        a = tbody.find_all('tr')
        if self.quote == '—Ä—É–±–ª—å' or self.quote == '–†—É–±–ª—å':
            val1 = a[self.currencies[self.base]].getText().split()
            valut1 = (float(val1[-2]) / float(val1[1]))*self.amount
            return valut1
        elif self.base == '—Ä—É–±–ª—å' or self.base == '–†—É–±–ª—å':
            val2 = a[self.currencies[self.quote]].getText().split()
            valut2 = (1/(float(val2[-2]) / float(val2[1])))*self.amount
            return valut2
        else:
            val1 = a[self.currencies[self.base]].getText().split()
            valut1 = (float(val1[-2]) / float(val1[1]))
            val2 = a[self.currencies[self.quote]].getText().split()
            valut2 = (float(val2[-2]) / float(val2[1]))
            return ((valut1 * self.amount)/valut2)

def obrabotka(users_message: str):
    a = users_message.split()
    try:
        if len(a) == 3:
            pass
        else:
            raise MessageException
        if a[1] != a[0]:
            pass
        else:
            raise SameCurrenciesException
        if a[0] in currencies:
            pass
        else:
            raise VrongFirstCurrencyException
        if a[1] in currencies:
            pass
        else:
            raise VrongSecondCurrencyException
        try:
            float(a[2])
            pass
        except ValueError:
            raise VrongAmountException
    except BaseException as e:
        return e
    else:
        a[2] = float(a[2])
        soob = Zapros(a[0], a[1], a[2], currencies)
        return soob.get_price()

